set -x
set -e
sudo add-apt-repository -y ppa:openjdk-r/ppa
sudo apt-get install aptitude

if [ ! -z "$SERVER" ]; then
   # Install etcher
   echo "deb https://deb.etcher.io stable etcher" | sudo tee /etc/apt/sources.list.d/balena-etcher.list
fi
sudo add-apt-repository -y ppa:apt-fast/stable
sudo apt-get update
sudo apt-get -y install apt-fast
sudo apt-get install -y aptitude
sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
sudo apt-fast update && sudo apt-get -y upgrade
sudo apt-get install -y docker-ce docker-ce-cli containerd.io
sudo apt-fast install -y `cat mypackages`
if [ -z "$SERVER" ]; then
   sudo apt-fast install -y `cat mydesktoppackages`
   sudo add-apt-repository -y ppa:obsproject/obs-studio
   sudo apt-fast update
   sudo apt-fast install -y obs-studio
fi
#virtualenv ~/beam_py3_env -p python3
#virtualenv ~/beam_py_env
#source ~/beam_py_env/bin/activate
#pip install -r beam_req.txt
#deactivate
#source ~/beam_py3_env/bin/activate
#pip install -r beam_req.txt
#deactivate
cp gitconfig ~/.gitconfig
git config --global user.email "holden@pigscanfly.ca"
git config --global user.name "Holden Karau"
set -ex
# Set up conda/mamba
export arch=$(uname -m)
if [ "$arch" == "aarm64" ]; then
  arch="arm64";
fi
wget --quiet https://github.com/conda-forge/miniforge/releases/download/4.8.5-1/Miniforge3-4.8.5-1-Linux-${arch}.sh -O ~/miniforge.sh
chmod a+x ~/miniforge.sh
sudo ~/miniforge.sh -b -p /opt/conda
sudo /opt/conda/bin/conda clean -tipsy
sudo ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
echo ". /opt/conda/etc/profile.d/conda.sh" | sudo tee -a ~/.bashrc
echo "conda activate base" >> ~/.bashrc
echo "conda activate base" | sudo tee -a ~/.bashrc
source ~/.bashrc
sudo /opt/conda/bin/conda clean -afy
sudo /opt/conda/bin/conda install --yes nomkl cytoolz cmake tini
sudo /opt/conda/bin/conda init bash
sudo /opt/conda/bin/conda install --yes mamba

# Install sbt
sudo apt-get update
sudo apt-get install apt-transport-https curl gnupg -yqq
echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import
sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg
sudo apt-get update
sudo apt-get install sbt

# Add user to docker
sudo usermod -aG docker $USER

# Install protolint
go install github.com/yoheimuta/protolint/cmd/protolint@latest
